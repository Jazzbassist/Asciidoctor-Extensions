<%#encoding:UTF-8%><%
if (checklist = (option? :checklist) ? 'checklist' : nil)
  if @document.attr? :icons, 'font'
    marker_checked = '<i class="icon-check"></i>'
    marker_unchecked = '<i class="icon-check-empty"></i>'
  else 
    marker_checked = '&#10003;'
    marker_unchecked = '&#10063;'
  end
end
%><%

if parent.attributes[1] == "multi"

%>"import ipywidgets as widgets\n",
"sel=widgets.SelectMultiple(\n",
"    options=[<%

    choice=""
    correct=[]
    choices=""
    items.each do |item|
       choice=item.text
       if choice.start_with?("<strong>")
         choice=choice.slice!(/<strong>(.*)<\/strong>/, 1)
         correct<<choice
       end
       choices=choices+%(\\")+choice+%(\\",)
    end #items.each do
    choices.chomp!(",")
    %><%=choices%>],\n",
"    value=[],\n",
"    #rows=10,\n",
"    description='choices',\n",
"    disabled=False\n",
")\n",
"confirm=widgets.Button(\n",
"    description='Click me',\n",
"    disabled=False,\n",
"    button_style='', # 'success', 'info', 'warning', 'danger' or ''\n",
"    tooltip='Click me',\n",
"    icon='check'\n",
")\n",
"\n",
"out = widgets.Output(layout={'border': '1px solid black'})\n",
"display(sel,confirm,out)\n",
"\n",
"def check_selection(b):\n",
"    with out:\n",
"        selection=sorted(sel.value)\n",
"        correct=[\"<%=correct.join(%(","))%>\"]\n",
"        correct.sort()\n",
"        if (selection==correct):\n",
"            print(\"Correct!\")\n",
"        else:\n",
"            print(\"Wrong!\")\n",
"confirm.on_click(check_selection)\n"<%




else #parent is not multi-block

  if title? %><%= title %><%
end #if title?%><%
items.each do |item| %>"* <%
  if checklist && (item.attr? :checkbox) %><%= %(#{(item.attr? :checked) ? marker_checked : marker_unchecked} #{item.text}) %><%
  else %><%= fixlinebreaks item.text %>\n",
<% end #if checklist%><%
  if item.blocks? %><%= item.content%>
<%
  end #if item.blocks?%><%
end #items.each do
%>"\n",<%

end #parent is not multi-block %>
